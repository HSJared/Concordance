/*****************************************************************************																			**	File:		binarytreenode.h											**																			**	Author:		Robb T. Koether												**																			**	Date:		Mar 30, 1999												**																			**	Purose:		This file contains the definition of the BinaryTreeNode		**				class														**																			*****************************************************************************/#ifndef BINARYTREENODE_H#define BINARYTREENODE_H//	Header files#include <iostream>#include <cassert>//	Forward class declarations for classes that use BinaryTreeNodestemplate <class T> class BinaryTree;template <class T> class BinarySearchTree;using namespace std;/*****************************************************************************																			**	The BinaryTreeNode template class definition							**																			*****************************************************************************/template<class T>class BinaryTreeNode{//	Friends	friend class BinaryTree<T>;	friend class BinarySearchTree<T>;		//	Public member functions	public:		T& value() {return data;}		BinaryTreeNode<T>* leftNode() {return left;}		BinaryTreeNode<T>* rightNode() {return right;}//	Private member functions	private:		//	Constructors			BinaryTreeNode(const T& value = T())			{data = value; left = right = NULL;}					BinaryTreeNode(BinaryTreeNode<T>* lf, BinaryTreeNode<T>* rt)			{data = T(); left = lf; right = rt;}					BinaryTreeNode(const T& value, BinaryTreeNode<T>* lf, BinaryTreeNode<T>* rt)			{data = value; left = lf; right = rt;}//	Data members	private:		T data;						// The value of the node		BinaryTreeNode<T>* left;	// Pointer to left subtree		BinaryTreeNode<T>* right;	// Pointer to right subtree};#endif